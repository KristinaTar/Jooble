{"version":3,"sources":["reducer.js","CityNotFoundErrorMessage.jsx","App.js","AppContainer.jsx","reduxStore.js","index.js"],"names":["SET_WEATHER_DATA","SET_CITY_FOUND","initialState","weatherData","city","temp","searchedCities","cityFound","setWeatherData","type","setCityFound","weatherReducer","state","action","newArr","splice","Math","round","CityNotFoundErrorMessage","style","textAlign","fontSize","color","height","App","props","useState","setNewCity","className","width","marginBottom","src","alt","id","display","placeholder","value","onChange","e","target","onClick","preventDefault","toLowerCase","getWeatherData","marginTop","fontFamily","map","i","compose","connect","dispatch","a","fetch","data","status","json","main","useEffect","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAAMA,EAAmB,mBACnBC,EAAe,iBAGjBC,EAAa,CACbC,YAAa,CACTC,KAAK,OACLC,KAAK,MAETC,eAAe,GACfC,WAAW,GA2BFC,EAAiB,SAACJ,EAAMC,GAAP,MAAiB,CAACI,KAAMT,EAAmBI,OAAMC,SAClEK,EAAe,SAACH,GAAD,MAAgB,CAACE,KAAMR,EAAgBM,cAqBpDI,EA9CM,WAAiC,IAAhCC,EAA+B,uDAAvBV,EAAcW,EAAS,uCACjD,OAAQA,EAAOJ,MACX,KAAKT,EACD,IAAIc,EAAO,CAACD,EAAOT,MAAT,mBAAiBQ,EAAMN,iBAEjC,OADAQ,EAAOC,OAAO,GAAI,GACX,2BACAH,GADP,IAEIT,YAAa,CACTC,KAAMS,EAAOT,KACbC,KAAOQ,EAAOR,KAAM,EAAG,IAAIW,KAAKC,MAAMJ,EAAOR,MAAMW,KAAKC,MAAMJ,EAAOR,OAEzEC,eAAeQ,IAEvB,KAAKb,EACD,kCACOW,GADP,IAEIL,UAAWM,EAAON,YAG1B,QACI,OAAOK,I,8BCvBJM,EAPgB,WAC3B,OAAM,qBAAKC,MAAO,CAACC,UAAU,SAAUC,SAAS,OAAQC,MAAM,MAAOC,OAAO,UAAtE,uECwCKC,MA1Cf,SAAaC,GAGT,MAA4BC,mBAAS,QAArC,mBAAQtB,EAAR,KAAcuB,EAAd,KAEA,OAAO,sBAAKC,UAAW,MAAhB,UACH,qBAAKT,MAAO,CAACU,MAAM,QAASN,OAAO,QAASO,aAAa,QAASC,IAAI,wEAAwEC,IAAI,SAElJ,sBAAMC,GAAG,OAAT,SACI,sBAAKd,MAAO,CAACe,QAAS,QAAtB,UACA,uBAAON,UAAW,cAAenB,KAAK,SAAS0B,YAAY,YAAaC,MAAOhC,EAAMiC,SAAW,SAAAC,GAAC,OAAEX,EAAWW,EAAEC,OAAOH,UACvH,wBAAQR,UAAW,eAAgBY,QAAS,SAAAF,GACxCA,EAAEG,iBACEhB,EAAMnB,eAAe,IAAMF,EAAKsC,gBAAgBjB,EAAMnB,eAAe,GAAGoC,eACxEjB,EAAMkB,eAAevC,IAH7B,yBAWJ,qBAAKe,MAAO,CAACyB,UAAU,OAAQC,WAAW,aAAcxB,SAAS,QAAjE,SACMI,EAAMlB,UACJkB,EAAMrB,KAAO,YAAYqB,EAAMpB,KADf,cAAC,EAAD,MAMxB,qBAAKuB,UAAW,aAAhB,SACKH,EAAMnB,eAAewC,KAAI,SAACR,EAAGS,GAAJ,OAAQ,sBAAMnB,UAAW,WAAqBY,QACvEF,IAAIb,EAAMnB,eAAe,GAAI,WAAKmB,EAAMf,cAAa,IACtD,WAAKe,EAAMkB,eAAeL,IAFQ,cAGlCA,IAHqES,YCXjF,IAUeC,cAASC,aAVA,SAACrC,GAAD,MAAY,CAClCR,KAAKQ,EAAMD,eAAeR,YAAYC,KACtCC,KAAKO,EAAMD,eAAeR,YAAYE,KACtCC,eAAeM,EAAMD,eAAeL,eACpCC,UAAUK,EAAMD,eAAeJ,aAMgB,CAACoC,eHStB,SAACvC,GAAD,8CAAQ,WAAO8C,GAAP,iBAAAC,EAAA,4DAChB,qBADgB,SAEbC,MAAM,qDAAD,OAAsDhD,EAAtD,gCADR,uBADgB,UAGd,OADZiD,EAF0B,QAGvBC,OAHuB,gBAI5BJ,EAASxC,GAAa,IAJM,0BAMV,MAAd2C,EAAKC,OANmB,kCAOLD,EAAKE,OAPA,QAOlBA,EAPkB,OAQxBL,EAASxC,GAAa,IACtBwC,EAAS1C,EAAeJ,EAAMmD,EAAKC,KAAKnD,KAAO,SATvB,4CAAR,uDGTqCK,iBAAlDsC,EAvBf,SAAuBvB,GAIrB,OAFAgC,qBAAU,WAAKhC,EAAMkB,eAAelB,EAAMrB,QAAO,IAE1C,cAAC,EAAD,CAAKuC,eAAgBlB,EAAMkB,eACtBvC,KAAMqB,EAAMrB,KACZC,KAAMoB,EAAMpB,KACZC,eAAgBmB,EAAMnB,eACtBC,UAAWkB,EAAMlB,UACjBG,aAAce,EAAMf,kB,QCX9BgD,EAASC,YAAgB,CACzBhD,mBAKWiD,EADDC,YAAYH,EAAUV,YAAQc,YAAgBC,OCJ5DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAcN,MAAOA,MAEvBO,SAASC,eAAe,W","file":"static/js/main.aaa609a5.chunk.js","sourcesContent":["const SET_WEATHER_DATA = 'SET_WEATHER_DATA';\r\nconst SET_CITY_FOUND='SET_CITY_FOUND';\r\n\r\n\r\nlet initialState={\r\n    weatherData: {\r\n        city:'Kyiv',\r\n        temp:null\r\n    },\r\n    searchedCities:[],\r\n    cityFound: true\r\n}\r\n\r\nconst weatherReducer=(state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case SET_WEATHER_DATA:\r\n            let newArr=[action.city,...state.searchedCities]\r\n            newArr.splice(10, 1)\r\n            return {\r\n                ...state,\r\n                weatherData: {\r\n                    city: action.city,\r\n                    temp: (action.temp)>0? '+'+Math.round(action.temp):Math.round(action.temp)\r\n                },\r\n                searchedCities:newArr\r\n            }\r\n        case SET_CITY_FOUND:\r\n            return{\r\n                ...state,\r\n                cityFound: action.cityFound\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setWeatherData = (city, temp) => ({type: SET_WEATHER_DATA,  city, temp});\r\nexport const setCityFound = (cityFound) => ({type: SET_CITY_FOUND, cityFound});\r\n\r\nexport const getWeatherData=(city)=>async (dispatch) => {\r\n    const secureAPI='2aea7457683524468f';\r\n    const data = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=0e43ba82fc9cae${secureAPI}`)\r\n    if (data.status===404){\r\n        dispatch(setCityFound(false))\r\n    } else {\r\n        if (data.status===200) {\r\n            const json = await data.json();\r\n            dispatch(setCityFound(true))\r\n            dispatch(setWeatherData(city, json.main.temp - 273.15))\r\n\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default weatherReducer;\r\n","import React from 'react';\r\n\r\n\r\nconst CityNotFoundErrorMessage=()=>{\r\n    return<div style={{textAlign:'center', fontSize:'15px', color:'red', height:'34.4px'}}>\r\n        The city was not found. Please enter the valid city name\r\n\r\n    </div>\r\n\r\n}\r\nexport default CityNotFoundErrorMessage;\r\n","import React, {useState} from 'react'\r\nimport CityNotFoundErrorMessage from \"./CityNotFoundErrorMessage\";\r\nfunction App(props) {\r\n\r\n\r\n    const  [city, setNewCity] = useState(\"Kyiv\");\r\n\r\n    return <div className={'App'}>\r\n        <img style={{width:'250px', height:'150px', marginBottom:'80px'}} src='https://logos-download.com/wp-content/uploads/2016/07/Jooble_logo.png' alt=\"Logo\"/>\r\n\r\n        <form id=\"form\">\r\n            <div style={{display: 'flex'}}>\r\n            <input className={'searchInput'} type=\"search\" placeholder=\"Search...\"  value={city} onChange={ e=>setNewCity(e.target.value)}/>\r\n            <button className={'searchButton'} onClick={e=> {\r\n                e.preventDefault();\r\n                if(!props.searchedCities[0] || city.toLowerCase()!==props.searchedCities[0].toLowerCase()){\r\n                    props.getWeatherData(city);\r\n                }\r\n            }}>Search</button>\r\n            </div>\r\n        </form>\r\n\r\n\r\n\r\n        <div style={{marginTop:'15px', fontFamily:'sans-serif', fontSize:'30px'}}>\r\n            {!props.cityFound ? <CityNotFoundErrorMessage/>  : (\r\n                props.city + \"(Today): \"+props.temp\r\n            )}\r\n        </div>\r\n\r\n\r\n        <div className={'citiesList'}>\r\n            {props.searchedCities.map((e, i)=><div  className={'cityItem'}  key={i} onClick={\r\n            (e===props.searchedCities[0])?()=>{props.setCityFound(true)}:\r\n            ()=>{props.getWeatherData(e)}\r\n        }> {e}\r\n        </div>)}\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n}\r\nexport default App;\r\n","import './App.css';\nimport React, {useEffect} from 'react'\nimport {getWeatherData, setCityFound} from \"./reducer\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport App from \"./App\";\n\n\nfunction AppContainer (props) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(()=>{props.getWeatherData(props.city)},[]);\n\n  return <App getWeatherData={props.getWeatherData}\n              city={props.city}\n              temp={props.temp}\n              searchedCities={props.searchedCities}\n              cityFound={props.cityFound}\n              setCityFound={props.setCityFound}\n              />\n  }\n\nconst mapStateToProps = (state) => ({\n  city:state.weatherReducer.weatherData.city,\n  temp:state.weatherReducer.weatherData.temp,\n  searchedCities:state.weatherReducer.searchedCities,\n  cityFound:state.weatherReducer.cityFound\n\n});\n\n\n\nexport default compose (connect(mapStateToProps, {getWeatherData,setCityFound}))(AppContainer);\n\n\n\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport weatherReducer from \"./reducer\";\r\n\r\n\r\n\r\nlet reducers=combineReducers({\r\n    weatherReducer\r\n});\r\n\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunkMiddleware)));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nimport AppContainer from \"./AppContainer\";\nimport store from \"./reduxStore\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer store={store} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}